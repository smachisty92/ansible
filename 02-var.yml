- name: Variable on Play Level
  hosts: all
  vars:
    URL: play.example.com
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL ={{URL}}

#Note: if we declare a varibale in PLAY level thenall the tasks can access that variables.

- name: Variables from File in Play Level
  hosts: all
  vars_files:
    - sample-vars.yml
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL ={{URL}}

# we can load all the varibales from a file, since it is in play level, all the tasks can access these varibales

- name: Variables on Task Level
  hosts: all
  tasks:
    - name: Print URL in Task1
      ansible.builtin.debug:
        msg: URL == {{URL}}
      vars:
        URL: task1.example.com
    - name: Print URL in Task2
      ansible.builtin.debug:
        msg: URL == {{URL}}
      vars:
        URL: task2.example.come

#Scope of task variables is only to that task, the other task cannot access the other tasks variables

#URL coming from Inventory
- name: varibale precedence
  hosts: all
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL == {{URL}}



#Varibale precedence
- name: varibale precedence
  hosts: all
  vars:
    URL: play.example.come
  vars_files:
    - sample-vars.yml
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL =={{URL}}
      vars:
        URL: task.example.com

# Print the hostname
- name: Print Hostname of remote nodes
  hosts: all
  tasks:
    - name: Print hostname
      ansible.builtin.debug:
        msg: Hostname == {{ansible_hostname}}
    - name: Print CPU
      ansible.builtin.debug:
        msg: "{{ansible_processor}}"

#Ansible run time varibale using register( From a task output)

- name: Register a variable
  hosts: all
  tasks:
    - name: Run uptime command
      ansible.builtin.shell: uptime
      register: OUT
    - name: Print OUT Variable
      ansible.builtin.debug:
        msg: "{{OUT.stdout}}"